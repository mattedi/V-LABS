// src/components/common/index.ts
// Arquivo de exporta√ß√£o centralizada para componentes comuns/reutiliz√°veis

/**
 * ================================================
 * CONCEITO: BARREL EXPORT PARA COMPONENTES COMUNS
 * ================================================
 * 
 * Esta pasta cont√©m componentes que s√£o:
 * - Reutiliz√°veis em m√∫ltiplas partes da aplica√ß√£o
 * - Gen√©ricos e sem l√≥gica de neg√≥cio espec√≠fica
 * - B√°sicos como bot√µes, inputs, avatares, etc.
 * - Independentes de contexto espec√≠fico
 * 
 * ESTRUTURA DA PASTA COMMON:
 * src/components/common/
 * ‚îú‚îÄ‚îÄ Avatar.tsx           ‚Üê Componente de avatar com iniciais/imagem
 * ‚îú‚îÄ‚îÄ Button.tsx           ‚Üê Bot√£o reutiliz√°vel com variantes
 * ‚îú‚îÄ‚îÄ Input.tsx            ‚Üê Campo de entrada (futuro)
 * ‚îú‚îÄ‚îÄ Modal.tsx            ‚Üê Modal/popup (futuro)
 * ‚îú‚îÄ‚îÄ Spinner.tsx          ‚Üê Indicador de carregamento (futuro)
 * ‚îú‚îÄ‚îÄ Badge.tsx            ‚Üê Etiquetas/tags (futuro)
 * ‚îî‚îÄ‚îÄ index.ts            ‚Üê Este arquivo (centralizador)
 * 
 * FILOSOFIA DOS COMPONENTES COMUNS:
 * - Design system consistency
 * - Reusabilidade m√°xima
 * - Props bem definidas
 * - Acessibilidade built-in
 * - Customiza√ß√£o via props/classes
 */

// ================================================
// IMPORTA√á√ïES DOS COMPONENTES LOCAIS
// ================================================

/**
 * Importa o componente Avatar
 * 
 * Avatar √© respons√°vel por:
 * - Exibir avatar circular ou quadrado
 * - Suporte a imagem com fallback para iniciais
 * - M√∫ltiplos tamanhos (xs, sm, md, lg, xl)
 * - M√∫ltiplas cores tem√°ticas
 * - Indicador de status opcional
 * - Funcionalidade de clique opcional
 * - Acessibilidade completa
 */
import Avatar from './Avatar';

/**
 * Importa o componente Button
 * 
 * Button √© respons√°vel por:
 * - Bot√£o reutiliz√°vel com m√∫ltiplas variantes
 * - Suporte a √≠cones
 * - Estados (disabled, loading, etc.)
 * - Tamanhos variados
 * - Tipos diferentes (primary, secondary, etc.)
 */
import Button from './Button';

// ================================================
// FUTURAS IMPORTA√á√ïES (componentes planejados)
// ================================================

// Componentes que podem ser adicionados no futuro:

// import Input from './Input';               // Campo de entrada customiz√°vel
// import TextArea from './TextArea';         // √Årea de texto
// import Select from './Select';             // Dropdown/seletor
// import Checkbox from './Checkbox';         // Caixa de sele√ß√£o
// import Radio from './Radio';               // Bot√£o de r√°dio
// import Switch from './Switch';             // Interruptor on/off
// import Slider from './Slider';             // Controle deslizante
// import Modal from './Modal';               // Modal/popup
// import Dialog from './Dialog';             // Di√°logo de confirma√ß√£o
// import Tooltip from './Tooltip';           // Dica de ferramenta
// import Popover from './Popover';           // Popup informativo
// import Dropdown from './Dropdown';         // Menu dropdown
// import Spinner from './Spinner';           // Indicador de carregamento
// import Progress from './Progress';          // Barra de progresso
// import Badge from './Badge';               // Etiqueta/tag
// import Chip from './Chip';                 // Chip remov√≠vel
// import Alert from './Alert';               // Mensagem de alerta
// import Toast from './Toast';               // Notifica√ß√£o tempor√°ria
// import Card from './Card';                 // Container de conte√∫do
// import Divider from './Divider';           // Separador visual
// import Skeleton from './Skeleton';         // Placeholder de carregamento
// import Image from './Image';               // Imagem com lazy loading
// import Icon from './Icon';                 // √çcone customiz√°vel
// import Link from './Link';                 // Link estilizado
// import Text from './Text';                 // Texto com variantes
// import Heading from './Heading';           // Cabe√ßalho com n√≠veis
// import Table from './Table';               // Tabela responsiva
// import Pagination from './Pagination';     // Pagina√ß√£o
// import Breadcrumb from './Breadcrumb';     // Migalhas de p√£o
// import Tabs from './Tabs';                 // Abas/guias
// import Accordion from './Accordion';       // Acorde√£o expans√≠vel
// import Collapsible from './Collapsible';   // Conte√∫do colaps√°vel

// ================================================
// RE-EXPORTA√á√ïES (EXPORTS)
// ================================================

/**
 * Re-exporta Avatar como named export
 * 
 * Transforma: default export ‚Üí named export
 * Permite: import { Avatar } from '../common'
 */
export { Avatar };

/**
 * Re-exporta Button como named export
 * 
 * Transforma: default export ‚Üí named export
 * Permite: import { Button } from '../common'
 */
export { Button };

// ================================================
// FUTURAS RE-EXPORTA√á√ïES
// ================================================

// Quando os componentes futuros forem criados, adicionar aqui:
// export { Input };
// export { TextArea };
// export { Select };
// export { Checkbox };
// export { Radio };
// export { Switch };
// export { Slider };
// export { Modal };
// export { Dialog };
// export { Tooltip };
// export { Popover };
// export { Dropdown };
// export { Spinner };
// export { Progress };
// export { Badge };
// export { Chip };
// export { Alert };
// export { Toast };
// export { Card };
// export { Divider };
// export { Skeleton };
// export { Image };
// export { Icon };
// export { Link };
// export { Text };
// export { Heading };
// export { Table };
// export { Pagination };
// export { Breadcrumb };
// export { Tabs };
// export { Accordion };
// export { Collapsible };

// ================================================
// EXPORTA√á√ÉO DE TIPOS (opcional)
// ================================================

/**
 * Se os componentes exportarem tipos/interfaces,
 * podemos re-export√°-los tamb√©m para uso externo
 * 
 * Exemplos futuros:
 * export type { AvatarProps } from './Avatar';
 * export type { ButtonProps } from './Button';
 * export type { InputProps } from './Input';
 * export type { ModalProps } from './Modal';
 */

// ================================================
// EXEMPLOS DE USO DESTE ARQUIVO
// ================================================

/**
 * üöÄ COMO USAR EM OUTROS ARQUIVOS:
 * 
 * // ‚úÖ DEPOIS (com este index.ts):
 * import { Avatar, Button } from '../components/common';
 * 
 * function UserCard() {
 *   return (
 *     <div>
 *       <Avatar initials="JS" size="lg" />
 *       <Button variant="primary">Editar Perfil</Button>
 *     </div>
 *   );
 * }
 * 
 * // ‚ùå ANTES (sem index.ts):
 * import Avatar from '../components/common/Avatar';
 * import Button from '../components/common/Button';
 * 
 * function UserCard() {
 *   return (
 *     <div>
 *       <Avatar initials="JS" size="lg" />
 *       <Button variant="primary">Editar Perfil</Button>
 *     </div>
 *   );
 * }
 * 
 * üìä COMPARA√á√ÉO:
 * - Imports mais concisos
 * - F√°cil adicionar novos componentes
 * - Estrutura escal√°vel
 * - Padr√£o da ind√∫stria
 */

// ================================================
// ORGANIZA√á√ÉO POR CATEGORIAS (futuro)
// ================================================

/**
 * üìã QUANDO HOUVER MUITOS COMPONENTES, ORGANIZAR POR CATEGORIA:
 * 
 * // FORMUL√ÅRIOS
 * export { Input, TextArea, Select, Checkbox, Radio, Switch };
 * 
 * // NAVEGA√á√ÉO
 * export { Button, Link, Breadcrumb, Pagination, Tabs };
 * 
 * // FEEDBACK
 * export { Alert, Toast, Spinner, Progress, Badge };
 * 
 * // OVERLAY
 * export { Modal, Dialog, Tooltip, Popover, Dropdown };
 * 
 * // LAYOUT
 * export { Card, Divider, Skeleton };
 * 
 * // M√çDIA
 * export { Avatar, Image, Icon };
 * 
 * // TIPOGRAFIA
 * export { Text, Heading };
 * 
 * // DADOS
 * export { Table };
 * 
 * // INTERA√á√ÉO
 * export { Accordion, Collapsible, Slider };
 */

// ================================================
// INTEGRA√á√ÉO COM DESIGN SYSTEM
// ================================================

/**
 * üé® INTEGRA√á√ÉO COM DESIGN SYSTEM:
 * 
 * Este arquivo serve como ponte entre:
 * - Design tokens (cores, espa√ßamentos, tipografia)
 * - Componentes reutiliz√°veis
 * - P√°ginas e features espec√≠ficas
 * 
 * ESTRUTURA HIER√ÅRQUICA:
 * tokens ‚Üí common components ‚Üí feature components ‚Üí pages
 * 
 * EXEMPLO:
 * theme.colors.primary ‚Üí Button.primary ‚Üí UserCard ‚Üí ProfilePage
 */

/**
 * üí° DICAS DE ORGANIZA√á√ÉO:
 * 
 * 1. **MANTER COMPONENTES SIMPLES**: Sem l√≥gica de neg√≥cio
 * 2. **PROPS CONSISTENTES**: Padr√µes similares entre componentes
 * 3. **DOCUMENTA√á√ÉO**: Cada componente bem documentado
 * 4. **TESTES**: Cobertura de teste para componentes cr√≠ticos
 * 5. **STORYBOOK**: Cat√°logo visual dos componentes (futuro)
 * 6. **ACESSIBILIDADE**: Sempre considerar a11y
 * 7. **PERFORMANCE**: Lazy loading quando apropriado
 */